import pytest
from src.masks import get_mask_card_number

@pytest.mark.parametrize("card_number, expected", [
    # Валидные номера карт
    ("1234567812345678", "1234 56** **** 5678"),  # 16 цифр
    ("1234567890123456", "1234 56** **** 3456"),  # 16 цифр
    ("1234567890", "1234 56** **** 7890"),        # 10 цифр
    ("1234 5678 9012 3456", "1234 56** **** 3456"),  # Номер с пробелами
    # Невалидные номера карт
    ("1234", ""),                                 # Слишком короткий номер
    ("", ""),                                     # Пустая строка
    ("abc1234567890123", ""),                     # Нецифровые символы
    ("12345678901234567890", ""),                 # Слишком длинный номер
    ("1234 5678 9012 3456 7890", ""),             # Слишком длинный номер с пробелами
])
def test_get_mask_card_number(card_number, expected):
    assert get_mask_card_number(card_number) == expected

from src.masks import get_mask_account
@pytest.mark.parametrize("account_number, expected", [
    # Валидные номера счетов
    ("12345678901234567890", "****************7890"),  # 20 цифр
    ("98765432101234567890", "****************7890"),  # 20 цифр
    ("1234567890", "******7890"),                     # 10 цифр
    ("1234 5678 9012 3456 7890", "****************7890"),  # Номер с пробелами
    # Невалидные номера счетов
    ("1234", ""),                                     # Слишком короткий номер
    ("", ""),                                         # Пустая строка
    ("abc12345678901234567890", ""),                  # Нецифровые символы
    ("123456789012345678901234567890", ""),           # Слишком длинный номер
])
def test_get_mask_account(account_number, expected):
    assert get_mask_account(account_number) == expected